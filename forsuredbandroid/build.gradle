apply plugin: 'com.android.library'
apply plugin: 'android-maven'
apply plugin: 'com.jfrog.bintray'

group = 'com.fsryan'
version = '0.6.0'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true    // <-- Uri.parse() now returns null
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

configurations {
    javadocSources
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:recyclerview-v7:23.2.1'

    compile 'com.google.guava:guava:19.0'

    compile 'com.fsryan:forsuredbcompiler:0.5.2'
    compile 'com.fsryan.forsuredb:sqlitelib:0.1.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'

    javadocSources 'com.google.guava:guava:19.0'
}

String bintrayUserCredential = hasProperty('bintrayUser') ? getProperty('bintrayUser') : ''
String bintrayApiKeyCredential = hasProperty('bintrayApiKey') ? getProperty('bintrayApiKey') : ''

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'forsuredbandroid'
                description 'An android library leveraging the forsuredb project'
                url 'https://github.com/ryansgot/forsuredb'

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id bintrayUserCredential
                        name 'Ryan Scott'
                        email 'ryansgot@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/ryansgot/forsuredb.git'
                    developerConnection 'https://github.com/ryansgot/forsuredb.git'
                    url 'https://github.com/ryansgot/forsuredb'
                }
            }
        }
    }
}

bintray {
    user = bintrayUserCredential
    key = bintrayApiKeyCredential

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'forsuredbandroid'
        desc = 'An android library leveraging the forsuredb project'
        websiteUrl = 'https://github.com/ryansgot/forsuredb'
        vcsUrl = 'https://github.com/ryansgot/forsuredb.git'
        licenses = ["Apache-2.0"]
//        publish = true
        publicDownloadNumbers = true
        version {
            name = '0.6.0'
            desc = 'An android library leveraging the forsuredb project'
            released  = new Date()
            vcsTag = 'v0.6.0'
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath.add(configurations.javadocSources.fileCollection {
        include '**/*.jar'
    })
    for (File file : classpath.files) {
        println("In Javadoc classpath: " + file.absolutePath)
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    //options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task release(dependsOn: bintrayUpload) {
    doLast {
        println("Huzzah! forsuredbandroid uploaded to bintray!")
    }
}