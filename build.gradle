buildscript {
    repositories {
        jcenter()
        maven {
            url  "http://dl.bintray.com/ryansgot/maven"
        }
        maven {
            url 's3://repo.fsryan.com/release'
            credentials(AwsCredentials) {
                accessKey = project.hasProperty("awsMavenAccessKey") ? project.property("awsMavenAccessKey") : ""
                secretKey = project.hasProperty("awsMavenSecretKey") ? project.property("awsMavenSecretKey") : ""
            }
        }
        maven {
            url 's3://repo.fsryan.com/snapshot'
            credentials(AwsCredentials) {
                accessKey = project.hasProperty("awsMavenAccessKey") ? project.property("awsMavenAccessKey") : ""
                secretKey = project.hasProperty("awsMavenSecretKey") ? project.property("awsMavenSecretKey") : ""
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.fsryan:forsuredbplugin:0.4.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.fsryan.gradle.autosemver:autosemver-git:0.1.0-alpha'
        classpath 'com.fsryan.gradle.coverage:android-java-coverage-merger:0.0.0'
        classpath 'com.fsryan.gradle.findbugsvariants:findbugs-variants:0.1.0-alpha'
    }
}

long buildTime = new Date().getTime()

allprojects {
    apply plugin: 'autosemver-git'

    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/ryansgot/maven"
        }
        maven {
            url 's3://repo.fsryan.com/snapshot'
            credentials(AwsCredentials) {
                accessKey project.hasProperty("awsAccessKey") ? project.property("awsAccessKey") : ""
                secretKey project.hasProperty("awsSecretKey") ? project.property("awsSecretKey") : ""
            }
        }
        maven {
            url 's3://repo.fsryan.com/release'
            credentials(AwsCredentials) {
                accessKey project.hasProperty("awsAccessKey") ? project.property("awsAccessKey") : ""
                secretKey project.hasProperty("awsSecretKey") ? project.property("awsSecretKey") : ""
            }
        }
    }

    ext {
        supportLibVersion = '25.3.1'

        mockitoVersion = '1.10.19'

        forsuredbVersion = '0.11.0'
        forsuredbSqliteVersion = '0.5.0'
    }

    autosemver {
        branchConfigs {
            integration {
                skipCiCommitMessageSuffix = '[skip ci]'
                pullRemote = 'origin'
                pushRemote = 'origin'
                versionIncrement = "patch"
                preRelease = 'test'
                metaData = Long.toString(buildTime)
            }
            alpha { // <-- for new features
                skipCiCommitMessageSuffix = '[skip ci]'
                pullRemote = 'origin'
                pushRemote = 'origin'
                versionIncrement = "minor"
                preRelease = 'alpha'
            }
            beta { // <-- for bug fixes
                skipCiCommitMessageSuffix = '[skip ci]'
                pullRemote = 'origin'
                pushRemote = 'origin'
                preRelease = 'beta'
            }
            master {    // <-- stable version
                skipCiCommitMessageSuffix = '[skip ci]'
                pullRemote = 'origin'
                pushRemote = 'origin'
            }
        }
    }
}