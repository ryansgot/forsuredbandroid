apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.forsuredb.testapp"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:21.0.3'

    compile project(':forsuredblib')
    apt project(':compiler')
}

// Makes sure that setProperties task is run prior to compilation
gradle.projectsEvaluated {
    setProperties.shouldRunAfter(clean)
    compileDebugJava.dependsOn(setProperties)
    dbmigrate.dependsOn(clean)
    dbmigrate.dependsOn(compileDebugJava)
}

boolean wasRequestedTask(String taskName) {
    for (TaskExecutionRequest taskExecutionRequest : project.gradle.startParameter.taskRequests) {
        for (String arg : taskExecutionRequest.args) {
            if (arg.equals(taskName)) {
                return true
            }
        }
    }

    return false
}

task setProperties << {
    // Ensures that the property the CodeGenerator needs is set and accurate for an Android project
    System.properties.put("resultParameter", "android.net.Uri")
    println("[setProperties]: set property resultParameter=" + System.properties.get("resultParameter"))
    if (wasRequestedTask("dbmigrate")) {
        System.properties.put("dbtype", "sqlite")
        System.properties.put("createMigrations", "true")
        System.properties.put("applicationPackageName", android.defaultConfig.applicationId)
        println("[setProperties]: set property dbtype=" + System.properties.get("dbtype"))
        println("[setProperties]: set property createMigrations=" + System.properties.get("createMigrations"))
        println("[setProperties]: set property applicationPackageName=" + System.properties.get("applicationPackageName"))
    }
}

task dbmigrate << {
    if (Boolean.getBoolean("createMigrations")) {
        println("[dbmigrate]: output migrations to default class path with package: " + System.getProperty("applicationPackageName"))
    }
}